@model EventStreamingPlatform.Models.StreamingViewModel.PagedFilmIndexData<Film>

@{
    ViewData["Title"] = "Films";
}

<h2>Films</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <table class="table">
            <tr>
                <th>
                    Find by name:
                    <input type="text" id="searchValue" value="@ViewData["CurrentFilter"]" />
                    <input type="button" value="Search" class="btn btn-default"
                           onclick="location.href='@Url.Action("Index", "Films", new { id = "", genreId = ""})?searchString=' + $('#searchValue').val()" />

                </th>
                <th>
                    <a class="btn btn-default" href="@Url.Action("Index","Films", new { id = "", genreId = "", SearchString = "" })">Clear search</a>
                </th>
            </tr>
        </table>
    </div>
</form>






<table class="table">
     @if (Model.Genres == null)
    {
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-CurrentFilter="@ViewData["CurrentFilter"]">Title</a>
             </th>
            <th><a asp-action="Index" asp-route-sortOrder="@ViewData["CompanySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Company</a>
                </th>
            <th>Language</th>
            <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["GenresSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Genres</a>
                </th>
            <th>Main Actors</th>
            <th>Others Actors</th>
            <th></th>
        </tr>
    </thead> }
    else
    {
 <thead>
        <tr>
            <th>
                Name
             </th>
            <th>Company</th>
            <th>Language</th>
            <th>
                   Genres
                </th>
            <th>Main Actors</th>
            <th>Others Actors</th>
            <th></th>
        </tr>
    </thead>}
    <tbody>
        @foreach (var item in Model.Films)
        {
            string selectedRow = "";
            if (item.ID == (int?)ViewData["FilmId"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language.LanguageName)
                </td>
                <td>
                    @foreach (var genre in item.FilmGenres)
                    {
                        @genre.Genre.Name <br />
                    }
                </td>
                <td>
                    @foreach (var actor in item.FilmActors)
                    {
                         @actor.Actor.Name @:  @actor.Actor.LastName <br />
                    }
                </td>
                  <td>
                    @foreach (var actor in item.FilmMainActors)
                    {
                         @actor.Actor.Name @:  @actor.Actor.LastName <br />
                    }
                </td>
                <td>
                    <a asp-action="Index" asp-route-id="@item.ID">Select</a> |
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
           }
    </tbody>
</table>

@if (Model.Genres != null)
{
    <h3>Genre with recomandation for <span style="font-style: oblique;">@ViewBag.Film</span></h3>
    <table class="table">
        <tr>
            
            <th>Number</th>
            <th>Name</th>
            <th>Recomandation</th>
        </tr>

        @foreach (var item in Model.Genres)
        {
            string selectedRow = "";
            if (item.GenreId == (int?)ViewData["GenreId"])
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
               
                <td>
                    @item.GenreId
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.Recomandation.Name
                </td>
            </tr>
        }

    </table>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@if (Model.Genres == null)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}
else
{
    <a asp-action="Index"
       asp-route-genreId=""
       asp-route-id=""
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Clear selection
    </a>
}
